<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <contextName>quesa</contextName>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <!--<property name="LOG_HOME" value="/home" />-->
    <!-- 开发环境变量develop-->
    <springProfile name="dev">
        <property name="LOG_HOME" value="logs"/>
    </springProfile>
    <!-- test境变量product-->
    <springProfile name="test">
        <property name="LOG_HOME" value="logs"/>
    </springProfile>
    <!-- prod环境变量product-->
    <springProfile name="prod">
        <property name="LOG_HOME" value="/var/quesa/webserver/logs"/>
    </springProfile>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>


    <!-- 日志文件:按照每天生成 -->
    <!--<appender name="DEBUG"  class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--&lt;!&ndash;日志文件输出的文件地址和名称&ndash;&gt;-->
    <!--<FileNamePattern>${LOG_HOME}/mybootproject_debug_%d{yyyy-MM-dd}.log</FileNamePattern>-->
    <!--&lt;!&ndash;日志文件保留天数&ndash;&gt;-->
    <!--<MaxHistory>30</MaxHistory>-->
    <!--</rollingPolicy>-->
    <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
    <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
    <!--</encoder>-->
    <!--&lt;!&ndash;日志文件最大的大小&ndash;&gt;-->
    <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
    <!--<MaxFileSize>10MB</MaxFileSize>-->
    <!--</triggeringPolicy>-->
    <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
    <!--<level>DEBUG</level>-->
    <!--<onMatch>ACCEPT</onMatch>-->
    <!--<onMismatch>DENY</onMismatch>-->
    <!--</filter>-->
    <!--</appender>-->
    <!--<appender name="INFO"  class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--&lt;!&ndash;日志文件输出的文件地址和名称&ndash;&gt;-->
    <!--<FileNamePattern>${LOG_HOME}/mybootproject_info_%d{yyyy-MM-dd}.log</FileNamePattern>-->
    <!--&lt;!&ndash;日志文件保留天数&ndash;&gt;-->
    <!--<MaxHistory>30</MaxHistory>-->
    <!--</rollingPolicy>-->
    <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
    <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
    <!--</encoder>-->
    <!--&lt;!&ndash;日志文件最大的大小&ndash;&gt;-->
    <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
    <!--<MaxFileSize>10MB</MaxFileSize>-->
    <!--</triggeringPolicy>-->
    <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
    <!--<level>INFO</level>-->
    <!--<onMatch>ACCEPT</onMatch>-->
    <!--<onMismatch>DENY</onMismatch>-->
    <!--</filter>-->
    <!--</appender>-->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>logs/mybootproject.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件地址和名称-->
            <fileNamePattern>logs/mybootproject-info-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>24</maxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}    [%thread]   %-5level    %logger{36} -%msg%n</Pattern>
        </layout>
        <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        &lt;!&ndash;日志文件最大的大小&ndash;&gt;
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->
        <!-- 日志级别过滤器 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 过滤的级别 -->
            <level>INFO</level>
            <!--<level>DEBUG</level>-->
        </filter>
    </appender>
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>logs/mybootproject_error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件地址和名称-->
            <fileNamePattern>logs/mybootproject-error-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>24</maxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}    [%thread]   %-5level    %logger{36} -%msg%n
            </Pattern>
        </layout>
        <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        &lt;!&ndash;日志文件最大的大小&ndash;&gt;
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
<!-- 日志级别过滤器 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 过滤的级别 -->
            <level>INFO</level>
            <!--<level>DEBUG</level>-->
        </filter>
    </appender>
<!-- 日志输出级别 -->
<!-- logback为java中的包 -->
    <logger name="com.quesa" level="DEBUG">
        <!--<appender-ref ref="DEBUG" />-->
        <appender-ref ref="ERROR"/>
        <appender-ref ref="INFO" />
    </logger>

    <!--
    root与logger是父子关系，没有特别定义则默认为root，任何一个类只会和一个logger对应，
    要么是定义的logger，要么是root，判断的关键在于找到这个logger，然后判断这个logger的appender和level。
    -->
    <!--<root level="INFO">-->
    <!--<appender-ref ref="STDOUT" />-->
    <!--</root>-->
</configuration>